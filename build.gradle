// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        kotlin_version = "1.9.23"
        compose_version = '1.6.4'
        accompanist_version = '0.34.0'
        ktor_version = '2.3.9'
    }
    repositories {
        google()
        mavenCentral()
    }


    dependencies {
        classpath 'com.android.tools.build:gradle:8.3.1'

        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id("com.github.ben-manes.versions") version "0.51.0"
}
/**
 * Returns an int representing how mature [version] is.
 * Higher numbers are more mature.
 */
static def maturityLevel(String version) {
    /**
     * Version qualifiers, in order from least to most mature.
     * The most mature is to have no qualifier at all.
     */
    def qualifiers = ["preview", "alpha", "beta", "m", "cr", "rc"]
    def qualifiersRegex = qualifiers.collect { /(?i).*[.\-]$it[.\-\d]*/ }

    def index = qualifiersRegex.findIndexOf { version ==~ it }
    return (index < 0) ? qualifiers.size() : index
}

tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        def candidateMaturity = maturityLevel(it.candidate.version)
        def currentMaturity = maturityLevel(it.currentVersion)
        candidateMaturity < currentMaturity
    }
}

tasks.register('clean', Delete) {
    delete rootProject.layout.buildDirectory
}